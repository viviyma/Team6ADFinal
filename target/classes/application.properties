
# datasource credentials and port/database configuration
# ?createDatabaseIfNotExist=true function => https://stackoverflow.com/questions/43249308/cant-create-a-mysql-database-using-spring-boot
spring.datasource.url=jdbc:mysql://localhost:3306/ADproj?createDatabaseIfNotExist=true
spring.datasource.username=halim
spring.datasource.password=penis

# Template mode to be applied to templates
spring.thymeleaf.mode=HTML

# Setting this to "none" disables Spring Session
spring.session.store-type=none

# Setting true allows Spring Session to create a table in our DB to persists session data such as sessionID
spring.session.jdbc.initialize-schema=always

# basically influence how the schema tool management will manipulate the database schema at startup
# See: https://stackoverflow.com/questions/42135114/how-does-spring-jpa-hibernate-ddl-auto-property-exactly-work-in-spring
# 'create' and 'create-drop' generally only used during testing; Consider switching to 'update' in production
spring.jpa.hibernate.ddl-auto=create

# Allows use of data.sql & schema.sql scripts to be called after Hibernate creates the intial database.
spring.jpa.defer-datasource-initialization=true

# Shows sql calls in console; useful for debugging
spring.jpa.show-sql=true

# allows Hibernate to generate SQL optimized for a particular relational database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# script-based initialization (data.sql, schema.sql) is performed by default only for embedded databases(eg. H2), to always initialize a database using scripts
spring.sql.init.mode=always
